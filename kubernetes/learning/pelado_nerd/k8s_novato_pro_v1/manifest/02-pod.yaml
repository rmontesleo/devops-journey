apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
  - name: nginx
    image: nginx:alpine
    env:
    - name: PHRASE
      value: "Esta chevere esto del Kubernetes o K8s para los cuadernos doble raya."
    - name: MY_VARIABLE
      value: "hello"
    - name: ANOTHER_VARIABLE
      value: "bye bye"
    - name: DD_AGENT_HOST
      valueFrom:
        # this hostIP is the IP of the host, not the ip of the pod
        fieldRef:
          fieldPath: status.hostIP
    resources:
      # the resources are by container
      # request: they are the guaranteed resources for the pod
      # memory in  megas
      # cpu: in milicores, and 1000 milicores  equals to 1 core in the node.
      requests:
        memory: "64Mi"
        cpu: "200m"

      # the limits the limit of memory and cpu
      # if the pod start to use more than the limit, the linux kernel ends the pod
      limits:
        memory: "128Mi"
        cpu: "500m"
    
    # is a way to explain kubernetes the pod is ready to get netowrk trafic
    # In this case execute a http get to path "/" and spect a http code 200 
    readinessProbe:
      httpGet:
        path: /
        port: 80
      initialDelaySeconds: 5
      periodSeconds: 10
    
    # a way to explain kubernetes the pod is alive
    # In this case is a tcp Socket to the port 80, to chekc the port 80 is open
    livenessProbe:
      tcpSocket:
        port: 80
      initialDelaySeconds: 15
      periodSeconds: 20
    
    # We open the port 80 in the container. In this case is the port used by nginx
    ports:
    - containerPort: 80